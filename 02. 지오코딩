#3단계: 지오 코딩하기 - 주소를 좌표로 변환
add_list <- list()
cnt <- 0
kakao_key = "746249ff2fdc7ec1fc1da2c01af66e1c"

for(i in 1:nrow(ddm_hs_ct_juso)) { #주소를 좌표료 변환하는 지오 코딩
  tryCatch(
    {
      lon_lat <- GET(url = 'https://dapi.kakao.com/v2/local/search/address.json', #카카오 API에 주소로 좌푯값을 요청
                     query = list(query = ddm_hs_ct_juso[i,]),
                     add_headers(Authorization = paste0("KakaoAK ", kakao_key)))
      coordxy <- lon_lat %>% content(as = 'text') %>% RJSONIO::fromJSON() #위경도만 추출하여 저장
      
      cnt = cnt + 1
      add_list[[cnt]] <- data.table(ddm_hs_ct_juso = ddm_hs_ct_juso[i,], #API 응답(JSON)을 text로 변환하고 RJSONIO::fromJSON()을 이용해 리스트 형태로 변환
                                    coord_x = coordxy$documents[[1]]$x, #주소, 경도, 위도 정보를 데이터 테이블로 저장 
                                    coord_y = coordxy$documents[[1]]$y)
      
      message <- paste0("[", i, "/", nrow(ddm_hs_ct_juso), "] 번째 (", #메시지 알림
                        round(i/nrow(ddm_hs_ct_juso)*100,2)," %) [", ddm_hs_ct_juso[i,] , "] 지오코딩 중입니다:
                        X= ", add_list[[cnt]]$coord_x, " / Y=", add_list[[cnt]]$coord_y)
      cat(message, "\n\n")
    }, error = function(e){cat("ERROR :",conditionMessage(e), "\n")} #오류 발생 시 대책
  )
}

ddm_geocoding <- rbindlist(add_list) #rbindlist()는 여러개의 리스트를 데이터프레임으로 변환
ddm_geocoding <- ddm_geocoding %>%  #주소 제거
  select(!contains("ddm_hs_ct_juso"))

ddm_data <- cbind(ddm_hs_ct$name ,ddm_hs_ct$대분류, ddm_geocoding)
colnames(ddm_data) <- c("장소이름", "대분류", "경도", "위도")
head(ddm_data)

ddm_data <- rbind(ddm_data, ddm_fd_fs)
ddm_data$경도 <- as.numeric(ddm_data$경도) #위도를 숫자형으로 변환
ddm_data$위도 <- as.numeric(ddm_data$위도) #경도를 숫자형으로 변환
ddm_data <- na.omit(ddm_data) #결측값 제거
head(ddm_data, 15)
